{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/cdk/drag-drop\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/menu\";\nfunction FetchDataComponent_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction FetchDataComponent_table_5_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\")(12, \"div\", 5)(13, \"button\", 6)(14, \"mat-icon\");\n    i0.ɵɵtext(15, \"more_vert\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"mat-menu\", null, 7)(18, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function FetchDataComponent_table_5_tr_14_Template_button_click_18_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const contact_r3 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.editItem(contact_r3));\n    });\n    i0.ɵɵtext(19, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function FetchDataComponent_table_5_tr_14_Template_button_click_20_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const contact_r3 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.deleteItem(contact_r3));\n    });\n    i0.ɵɵtext(21, \"Delete\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const contact_r3 = ctx.$implicit;\n    const _r4 = i0.ɵɵreference(17);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(contact_r3.dateCreated);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(contact_r3.dateModified);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(contact_r3.firstName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(contact_r3.lastName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(contact_r3.phoneNumber);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", _r4);\n  }\n}\nfunction FetchDataComponent_table_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 3)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Created\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Modified\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"First Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Last Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\");\n    i0.ɵɵtext(12, \"Phone\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"tbody\");\n    i0.ɵɵtemplate(14, FetchDataComponent_table_5_tr_14_Template, 22, 6, \"tr\", 4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(14);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.contacts);\n  }\n}\nexport class FetchDataComponent {\n  constructor(http, baseUrl) {\n    this.contacts = [];\n    http.get(baseUrl + 'weatherforecast').subscribe(result => {\n      this.contacts = result;\n    }, error => console.error(error));\n  }\n  editItem(contact) {\n    // Navigate to the new component for editing\n    // You can use the Angular Router for navigation\n    // Example: this.router.navigate(['/edit', contact.id]);\n  }\n  deleteItem(contact) {\n    // Make an API call to delete the item\n    // Example: this.http.delete(`/api/contacts/${contact.id}`).subscribe(() => { /* handle success */ });\n  }\n}\nFetchDataComponent.ɵfac = function FetchDataComponent_Factory(t) {\n  return new (t || FetchDataComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nFetchDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FetchDataComponent,\n  selectors: [[\"app-fetch-data\"]],\n  decls: 6,\n  vars: 2,\n  consts: [[\"id\", \"tableLabel\"], [4, \"ngIf\"], [\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [\"cdkDrag\", \"\", 1, \"drag-handle\"], [\"mat-icon-button\", \"\", 3, \"matMenuTriggerFor\"], [\"menu\", \"matMenu\"], [\"mat-menu-item\", \"\", 3, \"click\"]],\n  template: function FetchDataComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Weather forecast\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \"This component demonstrates fetching data from the server.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, FetchDataComponent_p_4_Template, 3, 0, \"p\", 1);\n      i0.ɵɵtemplate(5, FetchDataComponent_table_5_Template, 15, 1, \"table\", 2);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", !ctx.contacts);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.contacts);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.CdkDrag, i4.MatIconButton, i5.MatMenu, i5.MatMenuItem, i5.MatMenuTrigger],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;;;IAIAA,yBAAqB;IAAIA,0BAAU;IAAAA,iBAAK;;;;;;IAapCA,0BAAqC;IAC/BA,YAAyB;IAAAA,iBAAK;IAClCA,0BAAI;IAAAA,YAA0B;IAAAA,iBAAK;IACnCA,0BAAI;IAAAA,YAAuB;IAAAA,iBAAK;IAChCA,0BAAI;IAAAA,YAAsB;IAAAA,iBAAK;IAC/BA,0BAAI;IAAAA,aAAyB;IAAAA,iBAAK;IAClCA,2BAAI;IAGYA,0BAAS;IAAAA,iBAAW;IAEhCA,0CAA0B;IACFA;MAAA;MAAA;MAAA;MAAA,OAASA,0CAAiB;IAAA,EAAC;IAACA,qBAAI;IAAAA,iBAAS;IAC/DA,kCAAoD;IAA9BA;MAAA;MAAA;MAAA;MAAA,OAASA,4CAAmB;IAAA,EAAC;IAACA,uBAAM;IAAAA,iBAAS;;;;;IAZrEA,eAAyB;IAAzBA,4CAAyB;IACzBA,eAA0B;IAA1BA,6CAA0B;IAC1BA,eAAuB;IAAvBA,0CAAuB;IACvBA,eAAsB;IAAtBA,yCAAsB;IACtBA,eAAyB;IAAzBA,4CAAyB;IAGDA,eAA0B;IAA1BA,uCAA0B;;;;;IAnB5DA,gCAAiF;IAGvEA,uBAAO;IAAAA,iBAAK;IAChBA,0BAAI;IAAAA,wBAAQ;IAAAA,iBAAK;IACjBA,0BAAI;IAAAA,0BAAU;IAAAA,iBAAK;IACnBA,0BAAI;IAAAA,0BAAS;IAAAA,iBAAK;IAClBA,2BAAI;IAAAA,sBAAK;IAAAA,iBAAK;IAGlBA,8BAAO;IACLA,4EAiBK;IACPA,iBAAQ;;;;IAlBkBA,gBAAW;IAAXA,yCAAW;;;ACVvC,OAAM,MAAOC,kBAAkB;EAG7BC,YACEC,IAAgB,EACIC,OAAe;IAJ9B,aAAQ,GAAe,EAAE;IAM9BD,IAAI,CAACE,GAAG,CAAaD,OAAO,GAAG,iBAAiB,CAAC,CAACE,SAAS,CAACC,MAAM,IAAG;MACnE,IAAI,CAACC,QAAQ,GAAGD,MAAM;IACxB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;EAEAE,QAAQ,CAACC,OAAY;IACnB;IACA;IACA;EAAA;EAGFC,UAAU,CAACD,OAAY;IACrB;IACA;EAAA;;AApBSX,kBAAkB;mBAAlBA,kBAAkB,4DAKnB,UAAU;AAAA;AALTA,kBAAkB;QAAlBA,kBAAkB;EAAAa;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDP/BlB,6BAAoB;MAAAA,gCAAgB;MAAAA,iBAAK;MAEzCA,yBAAG;MAAAA,0EAA0D;MAAAA,iBAAI;MAEjEA,+DAA4C;MAE5CA,wEA8BQ;;;MAhCJA,eAAe;MAAfA,oCAAe;MAE8CA,eAAc;MAAdA,mCAAc","names":["i0","FetchDataComponent","constructor","http","baseUrl","get","subscribe","result","contacts","error","console","editItem","contact","deleteItem","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Projects\\ContactsApp\\HelloProject\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.html","C:\\Projects\\ContactsApp\\HelloProject\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.ts"],"sourcesContent":["<h1 id=\"tableLabel\">Weather forecast</h1>\r\n\r\n<p>This component demonstrates fetching data from the server.</p>\r\n\r\n<p *ngIf=\"!contacts\"><em>Loading...</em></p>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"contacts\">\r\n  <thead>\r\n    <tr>\r\n      <th>Created</th>\r\n      <th>Modified</th>\r\n      <th>First Name</th>\r\n      <th>Last Name</th>\r\n      <th>Phone</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let contact of contacts\">\r\n      <td>{{ contact.dateCreated }}</td>\r\n      <td>{{ contact.dateModified }}</td>\r\n      <td>{{ contact.firstName }}</td>\r\n      <td>{{ contact.lastName }}</td>\r\n      <td>{{ contact.phoneNumber }}</td>\r\n      <td>\r\n        <div class=\"drag-handle\" cdkDrag>\r\n          <button mat-icon-button [matMenuTriggerFor]=\"menu\">\r\n            <mat-icon>more_vert</mat-icon>\r\n          </button>\r\n          <mat-menu #menu=\"matMenu\">\r\n            <button mat-menu-item (click)=\"editItem(contact)\">Edit</button>\r\n            <button mat-menu-item (click)=\"deleteItem(contact)\">Delete</button>\r\n          </mat-menu>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  public contacts: Contacts[] = [];\r\n\r\n  constructor(\r\n    http: HttpClient,\r\n    @Inject('BASE_URL') baseUrl: string\r\n  ) {\r\n    http.get<Contacts[]>(baseUrl + 'weatherforecast').subscribe(result => {\r\n      this.contacts = result;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n  editItem(contact: any): void {\r\n    // Navigate to the new component for editing\r\n    // You can use the Angular Router for navigation\r\n    // Example: this.router.navigate(['/edit', contact.id]);\r\n  }\r\n\r\n  deleteItem(contact: any): void {\r\n    // Make an API call to delete the item\r\n    // Example: this.http.delete(`/api/contacts/${contact.id}`).subscribe(() => { /* handle success */ });\r\n  }\r\n}\r\n\r\ninterface Contacts {\r\n  dateCreated: string;\r\n  dateModified: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  phoneNumber: string;\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}